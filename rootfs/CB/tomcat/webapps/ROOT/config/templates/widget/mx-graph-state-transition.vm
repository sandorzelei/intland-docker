#if ($exportMode)
<!DOCTYPE html>

<html>

<head>
	<script type="text/javascript">
		window.contextPath = "${contextpath}";
	</script>

	<script type="text/javascript" src="${contextpath}/js/jquery/jquery.js"></script>
	<script type="text/javascript" src="${contextpath}/js/jquery/jquery-storage/jquery.jstore-all.js"></script>

	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/mxClient.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxLog.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxObjectIdentity.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxDictionary.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxResources.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxPoint.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxRectangle.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxEffects.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxUtils.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxConstants.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxEventObject.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxMouseEvent.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxEventSource.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxEvent.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxXmlRequest.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxClipboard.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxWindow.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxForm.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxImage.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxDivResizer.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxDragSource.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxToolbar.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxUndoableEdit.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxUndoManager.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxUrlConverter.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxPanningManager.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxPopupMenu.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxAutoSaveManager.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxAnimation.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxMorphing.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxImageBundle.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxImageExport.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxAbstractCanvas2D.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxXmlCanvas2D.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxSvgCanvas2D.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxVmlCanvas2D.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/util/mxGuide.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxStencil.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxShape.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxStencilRegistry.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxMarker.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxActor.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxCloud.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxRectangleShape.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxEllipse.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxDoubleEllipse.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxRhombus.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxPolyline.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxArrow.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxArrowConnector.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxText.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxTriangle.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxHexagon.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxLine.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxImageShape.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxLabel.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxCylinder.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxConnector.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/shape/mxSwimlane.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxGraphLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxStackLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxPartitionLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxCompactTreeLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxRadialTreeLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxFastOrganicLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxCircleLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxParallelEdgeLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxCompositeLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/mxEdgeLabelLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/model/mxGraphAbstractHierarchyCell.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/model/mxGraphHierarchyNode.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/model/mxGraphHierarchyEdge.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/model/mxGraphHierarchyModel.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/model/mxSwimlaneModel.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/stage/mxHierarchicalLayoutStage.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/stage/mxMedianHybridCrossingReduction.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/stage/mxMinimumCycleRemover.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/stage/mxCoordinateAssignment.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/stage/mxSwimlaneOrdering.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/mxHierarchicalLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/layout/hierarchical/mxSwimlaneLayout.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/model/mxGraphModel.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/model/mxCell.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/model/mxGeometry.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/model/mxCellPath.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxPerimeter.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxPrintPreview.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxStylesheet.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxCellState.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxGraphSelectionModel.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxCellEditor.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxCellRenderer.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxEdgeStyle.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxStyleRegistry.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxGraphView.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxGraph.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxCellOverlay.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxOutline.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxMultiplicity.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxLayoutManager.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxSwimlaneManager.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxTemporaryCellStates.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxCellStatePreview.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/view/mxConnectionConstraint.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxGraphHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxPanningHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxPopupMenuHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxCellMarker.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxSelectionCellsHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxConnectionHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxConstraintHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxRubberband.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxHandle.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxVertexHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxEdgeHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxElbowEdgeHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxEdgeSegmentHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxKeyHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxTooltipHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxCellTracker.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/handler/mxCellHighlight.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/editor/mxDefaultKeyHandler.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/editor/mxDefaultPopupMenu.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/editor/mxDefaultToolbar.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/editor/mxEditor.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxCodecRegistry.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxObjectCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxCellCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxModelCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxRootChangeCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxChildChangeCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxTerminalChangeCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxGenericChangeCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxGraphCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxGraphViewCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxStylesheetCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxDefaultKeyHandlerCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxDefaultToolbarCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxDefaultPopupMenuCodec.js"></script>
	<script type="text/javascript" src="${contextpath}/mxGraph/src/js/io/mxEditorCodec.js"></script>

	<link rel="stylesheet" href="${contextpath}/wro/newskin.css" type="text/css" media="all" />

#end
<script src="${contextpath}/mxGraph/custom/js/mxCustomEdgeLabelLayout.js"></script>

#if ($exportMode)
</head>
<body>
#end
<script type="text/javascript">
		//mxConnectionHandler.prototype.connectImage = new mxImage('${contextpath}/mxGraph/custom/images/zoom_in32.png', 16, 16);

		mxGraph.prototype.isValidRoot = function()
		{
			return false;
		};

		function main(container, graph, urls, xml)
		{
			if (!mxClient.isBrowserSupported())
			{
				mxUtils.error('Browser is not supported!', 200, false);
			}
			else
			{
				var style = graph.getStylesheet().getDefaultVertexStyle();
				style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;
				style[mxConstants.STYLE_ROUNDED] = true;
				style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;
				style[mxConstants.STYLE_FONTSIZE] = '13';
				style[mxConstants.STYLE_FONTFAMILY] = 'arial';
				style[mxConstants.STYLE_ROUNDED] = '1';
				style[mxConstants.STYLE_SHAPE] = 'label';
				style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;
				//style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_MIDDLE;
				style[mxConstants.STYLE_LABEL_POSITION] = 'center';
				style[mxConstants.STYLE_VERTICAL_LABEL_POSITION] = 'middle';
				style[mxConstants.STYLE_STROKECOLOR] = '#121212';
				style[mxConstants.STYLE_SPACING] = 6;

				style = graph.getStylesheet().getDefaultEdgeStyle();
				style[mxConstants.STYLE_CURVED] = '1';
				style[mxConstants.STYLE_FONTSIZE] = '13';
				style[mxConstants.STYLE_FONTCOLOR] = '#121212';
				style[mxConstants.STYLE_FONTFAMILY] = 'arial';
				style[mxConstants.STYLE_STROKECOLOR] = '#121212';

				style[mxConstants.STYLE_EDGE] = mxConstants.SegmentConnector;
				style[mxConstants.STYLE_VERTICAL_ALIGN] = 'top';
				style[mxConstants.STYLE_ALIGN] = 'right';

				graph.container.style.cursor = ''

				try {
					graph.getModel().beginUpdate();
					var doc = mxUtils.parseXml(xml);
					var codec = new mxCodec(doc);
					codec.decode(doc.documentElement, graph.model);
				} finally {
					graph.getModel().endUpdate();
				}
				var parent = graph.getDefaultParent();

				var allCells = graph.model.getChildCells(graph.getDefaultParent(), true, true);
				processValue(graph, allCells, urls);

				try {
					graph.getModel().beginUpdate();
					if (parent && parent.children) {
						for (var i = 0; i < parent.children.length; ++i) {
							if (parent.children[i].vertex && parent.children[i].children) {
								for (var j = 0; j < parent.children[i].children.length; ++j) {
									graph.updateCellSize(parent.children[i].children[j], false);
								}
							}
						}
					}
				} finally {
					graph.getModel().endUpdate();
				}

				try {
					graph.getModel().beginUpdate();
					if (parent && parent.children) {
						for (var i = 0; i < parent.children.length; ++i) {
							if (parent.children[i].vertex) {
								var h = new mxHierarchicalLayout(graph, mxConstants.DIRECTION_NORTH, true);
								if (parent.children[i].id in urls &&
									urls[parent.children[i].id]['zoom'] != null &&
									urls[parent.children[i].id]['zoom'] == 'true') {

									h.intraCellSpacing = 100;
									h.interHierarchySpacing = 100;
									h.interRankCellSpacing = 100;
									h.parallelEdgeSpacing = 100;
								}

								//graph.updateCellSize(parent.children[i], false);
								h.execute(parent.children[i]);
								parent.children[i].setConnectable(false);

							}
						}
					}
				} finally {
					graph.getModel().endUpdate();
				}

				try {
					graph.getModel().beginUpdate();
					if (parent && parent.children) {
						for (var i = 0; i < parent.children.length; ++i) {
							if (parent.children[i]) {
								graph.updateCellSize(parent.children[i], false);
								//graph.setCellStyles(mxConstants.STYLE_OPACITY, "0", [parent.children[i]]);
								graph.setCellStyles(mxConstants.STYLE_FILL_OPACITY, "0", [parent.children[i]]);
								//graph.setCellStyles(mxConstants.STYLE_STROKE_OPACITY, "0", [parent.children[i]]);
								//graph.setCellStyles(mxConstants.STYLE_TEXT_OPACITY, "0", [parent.children[i]]);
								graph.setCellStyles(mxConstants.STYLE_FOLDABLE, "0", [parent.children[i]]);

							}
						}
					}
				} finally {
					graph.getModel().endUpdate();
				}

				try {
					graph.getModel().beginUpdate();
					if (parent && parent.children) {
						for (var i = 0; i < parent.children.length; ++i) {
							if (parent.children[i].vertex) {

								// modify label positions
								if (parent.children[i].children) {
									for (var j = 1; j < parent.children[i].children.length; ++j) {
										var edges = graph.getOutgoingEdges(parent.children[i].children[j]);
										graph.setCellStyles(mxConstants.STYLE_ALIGN, "left", edges);
										graph.setCellStyles(mxConstants.STYLE_VERTICAL_ALIGN, "top", edges);
										edges = graph.getIncomingEdges(parent.children[i].children[j]);
										graph.setCellStyles(mxConstants.STYLE_ALIGN, "right", edges);
										graph.setCellStyles(mxConstants.STYLE_VERTICAL_ALIGN, "bottom", edges);
									}
								}
							}
						}
					}
				} finally {
					graph.getModel().endUpdate();
				}

				graph.updateGroupBounds(graph.model.getChildCells(graph.getDefaultParent(), true, false), 0, true);

				layout = new mxStackLayout(graph);
				layout.spacing = 150;
				layout.horizontal = true;
				layout.resizeParent = true;
				layout.fill = false;
				layout.x0= 40;
				layout.y0= 40;

				layout.execute(parent);

				try {
					graph.getModel().beginUpdate();
					if (parent && parent.children) {
						for (var i = 0; i < parent.children.length; ++i) {
							if (parent.children[i].vertex) {
								parent.children[i].geometry.width += 80;
								parent.children[i].geometry.height += 80;
								graph.moveCells(parent.children[i].children, 40, 40);
								graph.getView().clear(parent.children[i], false, false);
								graph.getView().validate();
							}
						}
					}
				} finally {
					graph.getModel().endUpdate();
				}
				graph.view.setTranslate(-graph.view.graphBounds.x - (graph.view.graphBounds.width - container.clientWidth) / 2, 20);

				graph.addListener(mxEvent.CLICK, function(sender, evt)
					{
						try {
							graph.getModel().beginUpdate();
							var selectedCell = evt.getProperty('cell');
							if (selectedCell != null) {
								if (!selectedCell.vertex) {
									// edge click
									if (selectedCell.id in urls && urls[selectedCell.id]['url'] != null) {
										window.open(urls[selectedCell.id]['url'], '_blank');
									} else if (selectedCell.id in urls && urls[selectedCell.id]['transitionUrl'] != null) {
										showStateTransition(urls[selectedCell.id]['transitionUrl']);
									}
								} else {
									// cell click
									if (selectedCell.id in urls && urls[selectedCell.id]['url'] != null) {
										window.open(urls[selectedCell.id]['url'], '_blank');
									} else if (selectedCell.id in urls && urls[selectedCell.id]['nodeUrl'] != null) {
										showStateNode(urls[selectedCell.id]['nodeUrl']);
									}
								}
							}
						} finally {
							graph.getModel().endUpdate();
						}
					}
				);

				var previousEdge = null;

				graph.addMouseListener({
					currentState: null,
					previousStyle: null,
					mouseDown: function(sender, me) {},
					mouseMove: function(sender, me) {
						if (previousEdge != null && (me.getCell() == null || me.getCell().vertex || (previousEdge != me.getCell()))) {
							var cells = [previousEdge];
							cells.push();
							if (previousEdge.hasOwnProperty('children') && previousEdge.children != null && previousEdge.children.length > 0) {
								for (var i = 0; i < previousEdge.children.length; ++i) {
									cells.push(previousEdge.children[i]);
								}
							}
							graph.setCellStyles(mxConstants.STYLE_FONTCOLOR, "#121212", cells);
							graph.setCellStyles(mxConstants.STYLE_STROKECOLOR, "#121212", cells);
							previousEdge = null;
						}
						if (me != null &&
							me.getCell() != null &&
							(!me.getCell().vertex ||
								(me.getCell().getParent() != null &&
								 me.getCell().getParent().id != 0 &&
								 me.getCell().getParent().id != 1 &&
								 !me.getCell().getParent().vertex))) {
							if (me.getCell().getParent() != null &&
								me.getCell().getParent().id != 0 &&
								me.getCell().getParent().id != 1 &&
								!me.getCell().getParent().vertex) {
								previousEdge = me.getCell().getParent();
							} else {
								previousEdge = me.getCell();
							}
							var cells = [previousEdge];
							graph.orderCells(false, cells);
							cells.push();
							if (previousEdge.hasOwnProperty('children') && previousEdge.children != null &&previousEdge.children.length > 0) {
								for (var i = 0; i < previousEdge.children.length; ++i) {
									cells.push(previousEdge.children[i]);
								}
							}
							graph.setCellStyles(mxConstants.STYLE_FONTCOLOR, "#0093b8", cells);
							graph.setCellStyles(mxConstants.STYLE_STROKECOLOR, "#006398", cells);
						}
						if (me != null &&
							me.getCell() != null &&
							me.getCell().id in urls &&
							(
								urls[me.getCell().id]['url'] != null ||
								urls[me.getCell().id]['nodeUrl'] != null ||
								urls[me.getCell().id]['transitionUrl'] != null
							) &&
							(
								urls[me.getCell().id]['zoom'] == null ||
								!me.getCell().vertex
							)) {
							graph.container.style.cursor = 'pointer';
						} else  if (graph.container.style.cursor != '' && graph.container.style.cursor != 'wait') {
							graph.container.style.cursor = '';
						}
					},
					mouseUp: function(sender, me) { },
					dragEnter: function(evt, state) {},
					dragLeave: function(evt, state) {}
				});

				/*mxEvent.addMouseWheelListener(function (evt, up) {
					var target = $(evt.target);
					if (target.context && findParentById(target.context, 'graphContainer_${mxGraphId}') != null) {
						if (!mxEvent.isConsumed(evt)) {
							if (up) {
								graph.zoomIn();
							} else {
								graph.zoomOut();
							}
							mxEvent.consume(evt);
						}
					}
				});*/

				graph.setCellsSelectable(false);
				graph.cellsEditable = false;

				graph.setResizeContainer(false);
				graph.setCellsMovable(false);

				graph.setAutoSizeCells(true);
				graph.setConnectable(false);
				graph.centerZoom = true;

				graph.panningHandler.useLeftButtonForPanning = true;
				graph.panningHandler.ignoreCell = false;
				graph.panningHandler.panningEnabled = true;
				graph.setPanning(true);

				mxPanningHandler.prototype.isForcePanningEvent = function(me) {
					if (me.isConsumed() || (me.getCell() != null)) {
						return true;
					} else {
						return false;
					}
				}

				/*new mxRubberband(graph);

				mxRubberband.prototype.mouseUp = function(sender, me) {

					var execute = this.div != null;
					this.reset();

					if (execute) {
						var rect = new mxRectangle(this.x, this.y, this.width, this.height);
						var graph = this.graph;

						graph.zoomToRect(rect);
						me.consume();
					}
				};*/

				allCells = graph.model.getChildCells(graph.getDefaultParent(), true, true);
				var edgesArray = [];
				var cellsArray = [];
				for (var i = 0; i < allCells.length; ++i) {
					if (allCells[i].children && allCells[i].children.length > 0) {
						for (var j = 0; j < allCells[i].children.length; ++j) {
							if (allCells[i].children[j].vertex) {
								cellsArray.push(allCells[i].children[j]);
							} else {
								edgesArray.push(allCells[i].children[j]);
							}
						}
					} else if (!allCells[i].vertex) {
						edgesArray.push(allCells[i]);
					}
				}
				var layout = new mxCustomEdgeLabelLayout(graph);
				layout.execute(edgesArray, cellsArray);
				graph.refresh();

				#if ($exportMode)
					graph.fit();
					graph.view.rendering = true;
					graph.refresh();
				#end
			}
		};

		function findParentById(el, id) {

			while (el && el.parentNode) {
				el = el.parentNode;
				if (el.id && el.id == id) {
					return el;
				}
			}

			return null;
		}
		function getAttribute(name, values) {
			var start = values.indexOf('<' + name + '>=');
			if (start == -1) {
				return null;
			} else {
				start += name.length + 3;
			}
			var end = values.indexOf('</>', start);
			return values.substring(start, end);
		}

		function processValue(graph, allCells, urls) {
			try {
				graph.getModel().beginUpdate();
				for (var i = 0; i < allCells.length; ++i) {
					// store urls
					var urlAttribute = getAttribute('url', allCells[i].value);
					var nodeUrlAttribute = getAttribute('nodeUrl', allCells[i].value);
					var transitionUrlAttribute = getAttribute('transitionUrl', allCells[i].value);
					var zoomAttribute = getAttribute('zoom', allCells[i].value);
					urls[allCells[i].id] = { 'url': urlAttribute, 'nodeUrl': nodeUrlAttribute, 'transitionUrl': transitionUrlAttribute, 'zoom': zoomAttribute};
					// set label
					allCells[i].value = getAttribute('name', allCells[i].value);
					graph.getView().clear(allCells[i], false, false);
					graph.getView().validate();
					if (allCells[i].children && allCells[i].children.length && allCells[i].children.length > 0) {
						processValue(graph, allCells[i].children, urls);
					}
				}
			} finally {
				graph.getModel().endUpdate();
			}


		}

		function createOutline(graph, outline) {
			if (mxClient.IS_QUIRKS)
			{
				document.body.style.overflow = 'hidden';
				new mxDivResizer(container);
				new mxDivResizer(outline);
			}
			new mxOutline(graph, outline);
		}

		jQuery(function($) {

			if (typeof globalVariables === 'undefined' || globalVariables === null) {
				globalVariables = new Object();
			}

			globalVariables["${mxGraphId}"] = {

				'urls': new Object(),

				'init': false,

				'graph': new mxGraph(document.getElementById('graphContainer_${mxGraphId}')),

				'xml': '$!{xml.replace("'","\'")}'
			};

            function initGraph() {
                if (!globalVariables["${mxGraphId}"].init) {
                    main(document.getElementById('graphContainer_${mxGraphId}'), globalVariables["${mxGraphId}"].graph, globalVariables["${mxGraphId}"].urls, globalVariables["${mxGraphId}"].xml);
                    createOutline(globalVariables["${mxGraphId}"].graph, document.getElementById('outlineContainer_${mxGraphId}'));
                    globalVariables["${mxGraphId}"].init = true;
                }
            }

			setTimeout(function() {
                var trackerCustomizeTransitionsTab = $('#tracker-customize-transitions-tab'),
                    trackerCustomizeHistoryTab = $('#tracker-customize-history-tab');

				if (trackerCustomizeTransitionsTab.length) {
                    if (!trackerCustomizeTransitionsTab.data('clickHandlerAdded')) {
						trackerCustomizeTransitionsTab.click(initGraph);
                        trackerCustomizeTransitionsTab.data('clickHandlerAdded', true);
					}

					if (trackerCustomizeTransitionsTab.hasClass('ditch-focused') || trackerCustomizeHistoryTab.hasClass('ditch-focused')) {
						initGraph();
					}
				} else {
					initGraph();
				}
			}, 100);

			$("#zoomInButton_${mxGraphId}").click(function() {
				globalVariables["${mxGraphId}"].graph.zoomIn();
			});

			$("#zoomOutButton_${mxGraphId}").click(function() {
				globalVariables["${mxGraphId}"].graph.zoomOut();
			});

			var parent = $("#graphContainer_${mxGraphId}").parent('div');

			if (parent.length > 0 && parent.parent('div').length > 0 && parent.parent('div').hasClass('pinned-content')) {
				parent.css('width', '100%');
			}
		});
	</script>

	<style>
		#graphContainer_${mxGraphId}, #graphContainer_${mxGraphId} svg {
			min-width: 0 !important;
			min-height: 500 !important;
		}
		.mxgrabbable {
			cursor: move; // fallback
			cursor: grab;
			cursor: -moz-grab;
			cursor: -webkit-grab;
		}

		/*.mxgrabbable:active {
			cursor: grabbing;
			cursor: -moz-grabbing;
			cursor: -webkit-grabbing;
		}*/

		#stateTransitionChartContainer span.wikiContent {
			display: inline-block;
			width: 100%;

		}

		#zoomInButton_${mxGraphId} {
			z-index:10;
			overflow:hidden;
			width:40px;
			height:40px;
			border-style:none;
			background:transparent;
			background-image: url('${contextpath}/mxGraph/custom/images/zoom_in32.png');
			cursor: pointer;
			opacity: 0.5;
			position:relative;
			margin-right: 20px;
			margin-top: 10px;
		}

		#zoomOutButton_${mxGraphId} {
			z-index:10;
			overflow:hidden;
			width:40px;
			height:40px;
			border-style:none;
			background:transparent;
			background-image: url('${contextpath}/mxGraph/custom/images/zoom_out32.png');
			cursor: pointer;
			opacity: 0.5;
			position:relative;
			margin-right: 20px;
			margin-top: 10px;
		}

		#showObsoleteSelect_${mxGraphId} {
			z-index: 10;
			cursor: pointer;
			float:left;
			position: relative;
		}
	</style>

	<div id="stateTransitionChartContainer_${mxGraphId}">
		#if ($exportMode)
			<div style="clear: both;"></div>
			<div style="height: 260px;"></div>
			<div style="clear: both;"></div>
			<div id="graphContainer_${mxGraphId}" style="overflow:hidden;top: -260px;width: 100%;height: 600px;" class="mxgrabbable">
			</div>
		#else
			<div style="clear: both;"></div>
			<div id="outlineContainer_${mxGraphId}"
				style="z-index:10;float:right;overflow:hidden;width:200px;height:150px;border-style:solid;border-color:lightgray;background:white;position:relative;margin-right: 20px;">
			</div>
			<div style="clear: both;"></div>
			<div id="zoomInButton_${mxGraphId}" style="float:right;"></div>
			<div style="clear: both;"></div>
			<div id="zoomOutButton_${mxGraphId}" style="float:right;"></div>
			<div style="clear: both;"></div>
			<div id="graphContainer_${mxGraphId}" style="overflow:hidden;top: -260px;width: 100%;min-height: 500px;" class="mxgrabbable">
			</div>
		#end
	</div>

#if ($exportMode)
</body>
</html>
#end